import { IdType } from '../IdType'

/**
 * Search is a generic interface for search libraries.
 *
 * T is the type of the index generated by the search library.
 * e.g. Fuse.Index, Lunr.Index, etc.
 */
export interface Search<T> {
  // Raw query string from the user
  query: string

  // Column names to be indexed
  indexedColumns: string[]

  options: SearchOptions

  // Convert library-specific results to a list of object IDs
  toSelection: (result: any) => IdType[]

  // Index generated by the search library
  index: Record<string, T>
}

interface SearchOptions {
  exact: boolean
  defaultOp: 'AND' | 'OR'
}
